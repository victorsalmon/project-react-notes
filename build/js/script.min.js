"use strict";function _toConsumableArray(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return Array.from(t)}var _extends=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t},Note=React.createClass({displayName:"Note",getInitialState:function(){return{editing:!1}},componentWillMount:function(){this.style={right:this.randomBetween(0,window.innerWidth-500,"px"),top:this.randomBetween(50,window.innerHeight,"px")}},componentDidUpdate:function(){this.state.editing&&(this.refs.newText.focus(),this.refs.newText.select())},edit:function(){this.setState({editing:!0})},randomBetween:function(t,e,n){return t+Math.ceil(Math.random()*(e-t))+n},remove:function(){this.props.onRemove(this.props.id)},renderForm:function(t){return React.createElement("div",{className:"note",style:this.style},React.createElement("textarea",{ref:"newText"},this.props.children),React.createElement("button",{className:"buttonBox",onClick:this.save},"Save"))},renderDisplay:function(){return React.createElement("div",{className:"note",style:this.style},React.createElement("p",null,this.props.children),React.createElement("div",{className:"buttonBox"},React.createElement("button",{onClick:this.edit},"Edit"),React.createElement("button",{onClick:this.remove},"Remove")))},render:function(){return React.createElement(ReactDraggable,null,this.state.editing?this.renderForm():this.renderDisplay())},save:function(){this.props.onChange(this.refs.newText.value,this.props.id),this.setState({editing:!1})},shouldComponentUpdate:function(t,e){return this.props.children!==t.children||this.state!==e}}),Board=React.createClass({displayName:"Board",propTypes:{count:function(t,e){return"number"!=typeof t[e]?new Error("The count must be a number!"):t[e]>100?new Error("Creating "+t[e]+" notes is too many!"):void 0}},add:function(t){console.log(this.state.notes.length);var e=[].concat(_toConsumableArray(this.state.notes),[{id:this.nextId(),note:t}]);this.setState({notes:e})},componentWillMount:function(){var t=this;if(this.props.count){var e="http://baconipsum.com/api/?type=all-meat&sentences="+this.props.count;fetch(e).then(function(t){return t.json()}).then(function(t){return t[0]}).then(function(t){return t.split(". ")}).then(function(e){return e.forEach(function(e){return t.add(e)})}).catch(function(t){console.log("Problem connecting to the API: ",t)})}},getInitialState:function(){return{notes:[]}},eachNote:function(t){return React.createElement(Note,{key:t.id,id:t.id,onChange:this.update,onRemove:this.remove},t.note)},nextId:function(){return this.state.notes.length},remove:function(t){var e=this.state.notes.filter(function(e){return e.id!==t});this.setState({notes:e})},render:function(){var t=this;return React.createElement("div",{className:"board"},this.state.notes.map(this.eachNote),React.createElement("div",{class:"buttonBox"},React.createElement("button",{onClick:function(){return t.add()}},"+")))},update:function(t,e){var n=this.state.notes.map(function(n){return n.id!==e?n:_extends({},n,{note:t})});this.setState({notes:n})}});ReactDOM.render(React.createElement(Board,{count:5}),document.getElementById("react-container"));